@use './variables' as *;
@use './functions' as *;

@mixin aStyle {
    margin: 0 0.5em;
    padding: 0.25em 0.5em;

    text-decoration: none;
    color: hsl(0, 0%, 0%);
    background-color: $button-color;

    font-family: Roboto;
    font-size: 1.1em;
    font-weight: 500;

    border: 1px solid hsl(0, 0%, 75%);
    border-radius: 5px;

    transition: background-color 150ms, border 150ms;

    &:hover {
        background-color: $button-color-hover;
        border: 1px solid hsl(0, 0%, 50%);
    }
}

@mixin button ($bgc: 'grey') {
    padding-block: rem(6px);
    padding-block-end: rem(7px);
    padding-inline: rem(16px);

    font-size: rem(14px);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-weight: 500;

    background-color: hsl(204, 100%, 48%);
    color: white;

    border: none;
    border-radius: rem(8px);

    cursor: pointer;

    transition: 150ms background-color, 150ms border, box-shadow 250ms;

    &:hover {
        @if $bgc =='grey' {
            background-color: hsl(0, 0%, 80%);
        }

        @else if $bgc =='blue' {
            background-color: hsl(214, 89%, 52%);
        }
    }

    &:active {
        opacity: 0.5;
        // background-color: rgba(0, 149, 246, 0.7);
        box-shadow: 0px 0px 5px 1px hsl(0, 0%, 100%);
    }
}

@mixin borderlessButton {
    @include button;
    background-color: white;
    color: hsl(204, 100%, 48%);

    font-size: em(14px);
    font-weight: 600;

    cursor: pointer;

    transition: opacity 100ms;

    &.full {
        opacity: 1;
    }

    &:hover {
        background-color: transparent;
        border: none;
        color: black;
    }

    &:active {
        box-shadow: none;
        opacity: 0.5;
    }
}

@mixin grid($type: row, $justify: null, $align: null, $place: null) {
    display: grid;
    grid-auto-flow: $type;

    @if $justify ==start {
        justify-items: start;
    }

    @else if $justify ==center {
        justify-items: center;
    }

    @else if $justify ==end {
        justify-items: end;
    }

    @if $align ==start {
        align-items: start;
    }

    @else if $align ==center {
        align-items: center;
    }

    @else if $align ==end {
        align-items: end;
    }

    @if $place ==start {
        place-items: start;
    }

    @else if $place ==center {
        place-items: center;
    }

    @else if $place ==end {
        place-items: end;
    }
}

@mixin for-narrow-mobile-layout {
    @media (width < 470px) {
        @content;
    }
}

@mixin for-mobile-layout {
    @media (width < 767px) {
        @content;
    }
}

@mixin for-narrow-layout {
    @media (width < 1060px) {
        @content;
    }
}

@mixin for-normal-layout {
    @media (width < 1263px) {
        @content;
    }
}

@mixin for-wide-layout {
    @media (width > 1263px) {
        @content;
    }
}

@mixin mainImage {

    >.post-image {

        background-color: hsl(0, 0%, 86%);
        border-bottom-left-radius: 6px;

        min-height: 100%;
        max-height: 100%;

        // overflow: hidden;

        >img {
            display: block;
            margin: auto;
            object-fit: contain;
            // min-width: 100%;
            max-width: 100%;
            // max-width: clamp(50%, 10vw, 100%);
            min-height: clamp(50%, 10vw, 100%);
            max-height: 100%;
            // aspect-ratio: 1/1;
        }
    }
}

@mixin userHeader($lineHeight: null, $imgSize: 40px, $hoverClr: hsl(0, 0%, 50%)) {
    padding-block: 0.6em;
    padding-inline: 0.6em;

    border-block-end: 1px solid hsl(0, 0%, 92%);

    >* {
        margin-inline-end: 0.25em;
    }

    >.user-image {
        margin-inline-end: 0.75em;

        width: $imgSize;
        height: $imgSize;

        border-radius: 999px;
        // background: linear-gradient(230deg,
        //         hsl(326, 57%, 48%),
        //         hsl(291, 63%, 46%),
        //         hsl(340, 75%, 54%),
        //         hsl(340, 75%, 54%),
        //         hsl(20, 92%, 59%),
        //         hsl(20, 92%, 59%),
        //         hsl(39, 96%, 50%),
        //         hsl(39, 96%, 80%),
        //         hsl(39, 96%, 90%));

        cursor: pointer;

        >img {
            width: $imgSize - 4px;
            height: $imgSize - 4px;

            border-radius: 999px;
            border: 2.5px solid white;
        }
    }

    >.header-details-container {
        >.header-details {
            * {
                margin-inline-end: 0.35em;
                font-size: em(14px);
            }

            >.user-name {
                display: inline;

                font-weight: 600;

                line-height: $lineHeight;
                cursor: pointer;

                &:hover {
                    color: $hoverClr;
                }
            }
        }

        >.location {
            padding-block-end: 0.25em;
            font-size: em(12px);
        }

    }
}

@mixin modal($name: 'modal-overlay', $width: null, $wide: false, $zIndex: 50) {

    .#{$name} {
        position: fixed;
        inset: 0;
        cursor: pointer;
        z-index: $zIndex - 20;

        background-color: rgba(0, 0, 0, 0.65);

        transition: background-color 0.3s;

        @include grid(row, $place: center);

        >.modal-container {
            margin-block-end: 2.5em;
            width: clamp(300px, 90vw, $width);

            background-color: rgb(255, 255, 255);
            border-radius: 6px;
            box-shadow:
                1px 1px 5px 0px rgba(0, 0, 0, 0.1);

            z-index: $zIndex;

            animation: slideUp 150ms ease;

            transition: width 500ms, top 500ms;

            @if $wide {
                &.wide {
                    width: clamp(300px, 90vw, 66.5vw);
                }
            }

            cursor: auto;

            >.close-btn {
                position: absolute;

                padding: em(8px);
                
                top: 10px;
                right: 10px;

                color: white;

                cursor: pointer;
            }

            >.modal {
                @content
            }
        }
    }
}


@mixin slideUpAnimation {
    @keyframes slideUp {
        from {
            scale: (1.1);
            opacity: 0;
        }
        to {
            scale: (1);
            opacity: 1;
        }
    }
}

@include slideUpAnimation();

@mixin growAnimation {
    @keyframes grow {
        0% {
            scale: (1);
            opacity: 0;
        }
        50% {
            scale: (1.2);
            opacity: 0.5;
        }
        100% {
            scale: (1);
            opacity: 1;
        }
    }
}
